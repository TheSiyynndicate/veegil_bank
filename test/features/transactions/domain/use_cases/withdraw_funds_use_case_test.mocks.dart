// Mocks generated by Mockito 5.4.3 from annotations
// in veegil_bank/test/features/transactions/domain/use_cases/withdraw_funds_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:veegil_bank/features/transactions/domain/entities/withdraw_entity.dart'
    as _i2;
import 'package:veegil_bank/features/transactions/domain/repositories/withdraw_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWithdrawEntity_0 extends _i1.SmartFake
    implements _i2.WithdrawEntity {
  _FakeWithdrawEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WithdrawRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWithdrawRepository extends _i1.Mock
    implements _i3.WithdrawRepository {
  @override
  _i4.Future<_i2.WithdrawEntity> withdrawFunds(int? amount) =>
      (super.noSuchMethod(
        Invocation.method(
          #withdrawFunds,
          [amount],
        ),
        returnValue: _i4.Future<_i2.WithdrawEntity>.value(_FakeWithdrawEntity_0(
          this,
          Invocation.method(
            #withdrawFunds,
            [amount],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.WithdrawEntity>.value(_FakeWithdrawEntity_0(
          this,
          Invocation.method(
            #withdrawFunds,
            [amount],
          ),
        )),
      ) as _i4.Future<_i2.WithdrawEntity>);
}
